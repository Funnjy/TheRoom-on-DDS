/**
 * File generated by the ThingML IDE
 * /!\Do not edit this file/!\
 * In case of a bug in the generated code,
 * please submit an issue on our GitHub
 **/

package org.thingml.generated;

import org.thingml.java.*;
import org.thingml.java.ext.*;

import org.thingml.generated.api.*;
import org.thingml.generated.messages.*;

import java.util.*;
import org.thingml.generated.gui.*;

public class Main {
	// Things
	public static TimerJava TimerJava_timer;
	public static OnOffSet OnOffSet_onoff1;
	public static TellstickManager TellstickManager_tlstick;
	public static HumanMock Human_myself;
	public static OnOffSimMock OnOffSim_onoffobs;
	public static ThermometerSet ThermometerSet_T1;
	public static PIM PIM_pim;
	public static TempSimMock TempSim_tg;
	public static GadgetSimMock GadgetSim_gdg;

	public static void main(String args[]) {
		// Things
		TempSim_tg = (TempSimMock) new TempSimMock("TempSim_tg").buildBehavior(null, null);
		GadgetSim_gdg = (GadgetSimMock) new GadgetSimMock("GadgetSim_gdg").buildBehavior(null, null);
		TellstickManager_tlstick = (TellstickManager) new TellstickManager("tlstick (TellstickManager)", (String) null,
				(short) 0, (String) null, (String) null, (short) 0, (short) 0, (short) 0, (float) 0.0f, (int) 0,
				(int) 0, (String) null, (String) null, (int) 0, (String) null, (int) 0).buildBehavior(null, null);
		final short[] onoff1_onoffswitches_array = new short[25];
		final boolean[] onoff1_poweron_array = new boolean[25];
		OnOffSet_onoff1 = (OnOffSet) new OnOffSet("onoff1 (OnOffSet)", (String) null, onoff1_onoffswitches_array,
				(short) (0), onoff1_poweron_array, (short) 0, (short) 0, (int) 0, (boolean) false, (int) 0)
						.buildBehavior(null, null);
		TimerJava_timer = (TimerJava) new TimerJava("timer (TimerJava)", (Thread) null).buildBehavior(null, null);
		final short[] pim_thermometers_array = new short[25];
		final String[] pim_thermotext_array = new String[25];
		final float[] pim_thermoval_array = new float[25];
		PIM_pim = (PIM) new PIM("pim (PIM)", pim_thermometers_array, pim_thermotext_array, pim_thermoval_array,
				(short) (0), (int) 0, (float) 0.0f, (boolean) false, (short) 0).buildBehavior(null, null);
		final short[] T1_thermometers_array = new short[25];
		final String[] T1_thermotext_array = new String[25];
		final float[] T1_thermoval_array = new float[25];
		ThermometerSet_T1 = (ThermometerSet) new ThermometerSet("T1 (ThermometerSet)", (String) null,
				T1_thermometers_array, T1_thermotext_array, T1_thermoval_array, (short) (0), (short) 0, (short) (10000),
				(int) 0, (short) 0, (float) 0.0f, (boolean) false, (short) 0).buildBehavior(null, null);
		Human_myself = (HumanMock) new HumanMock("Human_myself").buildBehavior(null, null);
		OnOffSim_onoffobs = (OnOffSimMock) new OnOffSimMock("OnOffSim_onoffobs").buildBehavior(null, null);
		// Connecting internal ports...
		// Connectors
		TellstickManager_tlstick.getTo_onoff1_port().addListener(OnOffSet_onoff1.getInitial_port());
		ThermometerSet_T1.getProvide_val_port().addListener(PIM_pim.getGet_sensor_port());
		PIM_pim.getRequest_actuator_port().addListener(OnOffSet_onoff1.getRequire_val_port());
		ThermometerSet_T1.getShow_values_port().addListener(TempSim_tg.getShow_values_port());
		PIM_pim.getRequest_sensor_port().addListener(ThermometerSet_T1.getRequire_val_port());
		PIM_pim.getHuman_output_port().addListener(Human_myself.getGet_values_port());
		Human_myself.getSend_cmd_port().addListener(PIM_pim.getHuman_input_port());
		TellstickManager_tlstick.getTo_gdg_port().addListener(GadgetSim_gdg.getShow_gadgets_port());
		TimerJava_timer.getTimer_port().addListener(ThermometerSet_T1.getTimer_port());
		ThermometerSet_T1.getTimer_port().addListener(TimerJava_timer.getTimer_port());
		TempSim_tg.getGive_values_port().addListener(ThermometerSet_T1.getGet_values_port());
		OnOffSet_onoff1.getShow_val_port().addListener(OnOffSim_onoffobs.getShow_onoff_port());
		TellstickManager_tlstick.getTo_T1_port().addListener(ThermometerSet_T1.getInitial_port());
		// Init instances (queues, etc)
		OnOffSim_onoffobs.init();
		PIM_pim.init();
		GadgetSim_gdg.init();
		TimerJava_timer.init();
		TempSim_tg.init();
		ThermometerSet_T1.init();
		TellstickManager_tlstick.init();
		Human_myself.init();
		OnOffSet_onoff1.init();
		// Network components for external connectors
		/* $NETWORK$ */
		// External Connectors
		/* $EXT CONNECTORS$ */
		/* $START$ */
		OnOffSim_onoffobs.start();
		OnOffSet_onoff1.start();
		Human_myself.start();
		PIM_pim.start();
		TempSim_tg.start();
		TimerJava_timer.start();
		ThermometerSet_T1.start();
		GadgetSim_gdg.start();
		TellstickManager_tlstick.start();
		// Hook to stop instances following client/server dependencies (clients
		// firsts)
		Runtime.getRuntime().addShutdownHook(new Thread() {
			public void run() {
				TellstickManager_tlstick.stop();
				ThermometerSet_T1.stop();
				PIM_pim.stop();
				OnOffSet_onoff1.stop();
				OnOffSim_onoffobs.stop();
				Human_myself.stop();
				TempSim_tg.stop();
				TimerJava_timer.stop();
				GadgetSim_gdg.stop();
				/* $STOP$ */
			}
		});

	}
}
